name: Elixir CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build_and_test:
    name: Build and test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        elixir: ["1.14.1"]
        otp: [25]
        cache: [1]
    services:
      db:
        image: postgres:11
        ports: ["5432:5432"]
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Elixir
        uses: actions/setup-elixir@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Restore dependencies cache
        id: mix-deps-cache
        uses: actions/cache@v2
        with:
          path: deps
          key: ${{ runner.os }}-mix-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: ${{ runner.os }}-${{ matrix.cache }}-mix

      - name: Restore build cache
        uses: actions/cache@v1
        with:
          path: _build
          key: cache-${{ runner.os }}-dialyzer_build-${{ matrix.otp }}-${{ matrix.elixir }}-${{ hashFiles('**/mix.lock') }}
          restore-keys: cache-${{ runner.os }}-${{ matrix.cache }}-dialyzer_build-

      - name: Install Mix Dependencies
        if: steps.mix-deps-cache.outputs.cache-hit != 'true'
        run: |
          mix local.rebar --force
          mix local.hex --force
          mix deps.get

      - name: Credo
        run: mix credo --strict

      - name: Check formatting
        run: mix format --check-formatted

      - name: Restore PLT Cache
        uses: actions/cache@v1
        id: plt-cache
        with:
          path: plts
          key: ${{ runner.os }}-${{ matrix.otp }}-${{ matrix.elixir }}-plts-${{ hashFiles('**/mix.lock') }}
          restore-keys: cache-${{ runner.os }}-${{ matrix.cache }}-dialyzer_build-

      - name: Create PLTs
        if: steps.plt-cache.outputs.cache-hit != 'true'
        run: |
          mkdir -p plts
          mix dialyzer --plt

      - name: Run dialyzer
        run: mix dialyzer

      - name: Run tests
        run: mix test
